The queries below are some examples of the nested SELECT statements that I created to analyze averages and counts from the data.
They involved multiple tables and varried in complexity. 

------------------------------------------------------------------------

SELECT AVG (average.total_amount_paid) AS "Average Paid"
FROM 
	(SELECT A.customer_id,
		SUM (B.amount) AS total_amount_paid,
		A.first_name,
		A.last_name,
		E.country,
		D.city
	FROM customer A
	INNER JOIN payment B ON A.customer_id = B.customer_id
	INNER JOIN address C ON A.address_id = C.address_id
	INNER JOIN city D ON C.city_id = D.city_id
	INNER JOIN country E ON D.country_id = E.country_id
	WHERE D.city IN ('Aurora','Acua','Citrus Heights','Iwaki',
					'Ambattur','Shanwei','So Leopoldo',
					'Teboksary','Tianjin','Cianjur')
	GROUP BY A.customer_id, E.country, D.city
	ORDER BY SUM (b.amount) DESC
	LIMIT 5) AS average

------------------------------------------------------------------------

SELECT D.country,
	COUNT(DISTINCT A.customer_id) AS "All Customer Count",
	COUNT(DISTINCT top_5_customers.customer_id) AS "Top Customer Count"
FROM customer A
INNER JOIN address B ON A.address_id = B.address_ID
INNER JOIN city C ON B.city_id = C.city_id
INNER JOIN country D ON C.country_id = D.country_id
LEFT JOIN
	(SELECT A.customer_id,
		SUM (B.amount) AS total_amount_paid,
		A.first_name,
		A.last_name,
		E.country,
		D.city
	FROM customer A
	INNER JOIN payment B ON A.customer_id = B.customer_id
	INNER JOIN address C ON A.address_id = C.address_id
	INNER JOIN city D ON C.city_id = D.city_id
	INNER JOIN country E ON D.country_id = E.country_id
	WHERE D.city IN ('Aurora','Acua','Citrus Heights','Iwaki',
					'Ambattur','Shanwei','So Leopoldo',
					'Teboksary','Tianjin','Cianjur')
	GROUP BY A.customer_id, E.country, D.city
	ORDER BY SUM (b.amount) DESC
	LIMIT 5) AS top_5_customers
ON A.customer_id = top_5_customers.customer_id
GROUP BY D.country
HAVING COUNT(DISTINCT top_5_customers.customer_id) >= 1
ORDER BY "All Customer Count" DESC
